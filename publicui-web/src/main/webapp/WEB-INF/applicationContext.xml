<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
				http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
				http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
				http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:component-scan base-package="com.funnelback.publicui.log,com.funnelback.publicui.search,com.funnelback.publicui.xml" />
	<task:annotation-driven />
	
	<bean id="appCacheManager" class="net.sf.ehcache.CacheManager">
		<constructor-arg index="0" type="java.net.URL"
			value="classpath:ehcache.xml" />
	</bean>

	<bean id="searchHome" class="java.io.File">
		<!-- constructor-arg index="0" type="java.lang.String" value="#{ T(java.lang.System).getenv('SEARCH_HOME') }" / -->
		<constructor-arg index="0" type="java.lang.String" value="#{ systemProperties['funnelback.installdir'] }" />
	</bean>

	<util:properties id="appProperties" location="file:${funnelback.installdir}/conf/publicui.properties" />
	
	<bean id="RequestParametersTransformFilter" class="com.funnelback.publicui.search.web.filters.RequestParametersTransformFilter" />
	<bean id="HostnameRestrictionFilter" class="com.funnelback.publicui.search.web.filters.HostnameRestrictionFilter" />	
	
	<bean class="org.apache.commons.pool.impl.GenericKeyedObjectPool" destroy-method="close">
		<constructor-arg index="0">
			<bean class="com.funnelback.publicui.search.lifecycle.data.fetchers.padre.pool.PadreConnectionFactory" />
		</constructor-arg>
		<!--  constructor-arg index="1" value="10" / -->
	</bean>
	
	<!-- ***** List of processors to run ***** -->
	
	
	<util:list id="inputFlow">
		<!-- passThroughParametersInputProcessor should be first as it populates 
			required values for following processors -->
		<ref bean="passThroughParametersInputProcessor" />
		<ref bean="passThroughEnvironmentVariabesInputProcessor" />
		<ref bean="userKeysInputProcessor" />
		<ref bean="facetedNavigationInputProcessor" />
		<ref bean="metaParametersInputProcessor" />
		<ref bean="metadataAliasesInputProcessor" />
		<ref bean="metaDatesInputProcessor" />
		<ref bean="cliveMappingInputProcessor" />
		<ref bean="quickLinksInputProcessor" />
		<ref bean="exploreQueryInputProcessor" />
	</util:list>

	<util:list id="dataFetchers">
		<bean id="PreDataFetchHook"
			class="com.funnelback.publicui.search.lifecycle.GenericHookScriptRunner">
			<constructor-arg value="#{ T(com.funnelback.publicui.search.model.collection.Collection$Hook).pre_datafetch }" />
			<constructor-arg value="#{ T(com.funnelback.publicui.search.lifecycle.GenericHookScriptRunner$Phase).Data }" />
		</bean>
		<ref bean="padreForking" />
		<!-- ref bean="padreForkingPooled" / -->
		<bean id="PostDataFetchHook" class="com.funnelback.publicui.search.lifecycle.GenericHookScriptRunner">
			<constructor-arg value="#{ T(com.funnelback.publicui.search.model.collection.Collection$Hook).post_datafetch }" />
			<constructor-arg value="#{ T(com.funnelback.publicui.search.lifecycle.GenericHookScriptRunner$Phase).Data }" />
		</bean>
	</util:list>

	<util:list id="outputFlow">
		<ref bean="padreReturnCodeOutputProcessor" />
		<ref bean="fixPseudoLiveLinksOutputProcessor" />
		<ref bean="fixCacheAndClickLinks" />
		<ref bean="facetedNavigationOutputProcessor" />
		<ref bean="facetedNavigationTransformOutputProcessor" />
		<ref bean="contextualNavigationOutputProcessor" />
		<ref bean="quickLinksOutputProcessor" />
		<ref bean="queryCleanOutputProcessor" />
	</util:list>

	<!-- ***** -->
	
	<util:map id="profilingStatsNotSynchronized" key-type="java.lang.String" value-type="com.funnelback.publicui.aop.ProfiledAspect.MethodStats" />
	<bean id="profilingStats" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass"><value>java.util.Collections</value></property>
		<property name="targetMethod"><value>synchronizedMap</value></property>
		<property name="arguments"><ref bean="profilingStatsNotSynchronized" /></property>
	</bean>
	
	<util:map id="searchStatsNotSynchronized" key-type="java.lang.String" value-type="java.lang.Long" />
	<bean id="searchStats" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass"><value>java.util.Collections</value></property>
		<property name="targetMethod"><value>synchronizedMap</value></property>
		<property name="arguments"><ref bean="searchStatsNotSynchronized" /></property>
	</bean>
	
	
</beans>