var SearchHistory=function(){"use strict";var Constructor=function(options){return this.init(options)};Constructor.defaults={apiBase:"/",collection:null,iconPrefix:"glyphicon glyphicon-",box:{selector:"#search-history",pageSelector:["#search-results-display","#search-cart"],icon:"time",label:"History",backIcon:"arrow-left",backLabel:"Back to results",clearClasses:"btn btn-xs btn-danger",clearIcon:"remove",clearLabel:"Clear"},clickBox:{icon:"heart",label:"Recently clicked results",results:"#click-history-results"},searchBox:{icon:"search",label:"Recent searches",results:"#search-history-results"},trigger:{selector:".flb-history-trigger",icon:null,isLabel:true,label:"History",template:"{{>icon-block}} {{>label-block}}"}};Constructor.prototype.Handlebars=Handlebars.create();Constructor.prototype.init=function(options){if(!options.collection){Log.warn('Missing "collection" parameter');return null}this.options=Utils.extend(Constructor.defaults,options||{});if(!this.options.box.pageSelector)this.options.box.pageSelector=[];View.init(this.options);return this};Constructor.prototype.clear=function(options,type){const label=View.labelType(type);if(confirm("Your "+label+" will be cleared")===true){Api.delete(options,type).then(function(response){View.clear(options,type)}).catch(function(error){Log.error("Something went wrong and "+label+" was not cleared. Please try again later...",error)})}return this};Constructor.prototype.destroy=function(){this.options={};return null};Constructor.prototype.show=function(){View.element.style.display="block";View.togglePageElements("none");View.isHidden=false;return this};Constructor.prototype.hide=function(){View.element.style.display="none";View.togglePageElements("block");View.isHidden=true;return this};Constructor.prototype.toggle=function(){return View.isHidden?Constructor.prototype.show():Constructor.prototype.hide()};Constructor.prototype.getOption=function(key,val){if(arguments.length===0){return this.options}if(typeof key==="string"){return this.options[key]}};const Api={clickUrl:"s/click-history.json",searchUrl:"s/search-history.json",delete:function(options,type,params){return Api.request("delete",options,type,params)},request:function(method,options,type,params){return new Promise(function(resolve,reject){const xhr=new XMLHttpRequest,url=Api.getUrl(options,type,params);xhr.onload=function(){if(this.status!==200){reject({url:url,error:this})}else{try{const data=JSON.parse(this.responseText);resolve({url:url,data:data})}catch(error){reject({url:url,error:error})}}};xhr.onerror=function(){reject({url:url,error:xhr})};xhr.open(method,url,true);xhr.setRequestHeader("Accept","application/json");xhr.setRequestHeader("Content-Type","text/plain");xhr.send(params||{})})},getUrl:function(options,type,params={}){params["collection"]=options.collection;return options.apiBase+(type==="click-history"?Api.clickUrl:Api.searchUrl)+"?"+$.param(params)}};const View={element:null,pageElements:[],isHidden:true,init:function(options){View.element=ElementUtil.findOnce(options.box.selector);for(var i=0,len=options.box.pageSelector.length;i<len;i++){const el=ElementUtil.findOnce(options.box.pageSelector[i]);if(el)View.pageElements.push(el)}Constructor.prototype.hide();const backEl=ElementUtil.create("flb-history-box-back",View.element,"a",Templates.getIconLabelTemplate(options,options.box.backIcon,options.box.backLabel),{style:"cursor: pointer"});ElementUtil.addEvent(backEl,"click",Constructor.prototype.hide);ElementUtil.create("flb-history-box-header",View.element,"h2",Templates.getIconLabelTemplate(options,options.box.icon,options.box.label));View.element.insertAdjacentHTML("beforeend",Templates.once.box);const trigger=ElementUtil.create("flb-history-trigger",ElementUtil.findOnce(options.trigger.selector),"a",HandlebarsUtil.compile(options.trigger.template)(Templates.getIconLabelData(options,options.trigger.icon,options.trigger.label)),{style:"cursor: pointer"});ElementUtil.addEvent(trigger,"click",Constructor.prototype.toggle);View.render(options,"click-history","clickBox");View.render(options,"search-history","searchBox")},clear:function(options,type){ElementUtil.remove(ElementUtil.findOnce("."+View.classType(type,"results")));View.noResults(type,ElementUtil.findOnce("."+View.classType(type,"clear"),View.element),ElementUtil.findOnce("."+View.classType(type),View.element))},render:function(options,type,box){const element=ElementUtil.findOnce("."+View.classType(type),View.element),headerEl=ElementUtil.create(View.classType(type,"header"),element,"h3",Templates.getIconLabelTemplate(options,options[box].icon,options[box].label)),clearEl=ElementUtil.create(View.classType(type,"clear"),headerEl,"a",Templates.getIconLabelTemplate(options,options.box.clearIcon,options.box.clearLabel),{class:options.box.clearClasses});ElementUtil.addEvent(clearEl,"click",function(e){e.preventDefault();return Constructor.prototype.clear(options,type)});const resultsEl=ElementUtil.findOnce(options[box].results);if(resultsEl){const content=ElementUtil.getContent(resultsEl).trim();if(content.length)ElementUtil.create(View.classType(type,"results"),element,"div",content);else View.noResults(type,clearEl,element)}else Log.warn('No element was found with provided page selector "'+options[box].results+'"')},classType:function(type,s){return"flb-"+type+"-box"+(s?"-"+s:"")},labelType:function(type){return type.split("-").join(" ")},noResults:function(type,clearEl,boxEl){clearEl.style.display="none";ElementUtil.create(View.classType(type,"empty"),boxEl,"div","Your "+View.labelType(type)+" is empty",{class:"text-muted"})},togglePageElements:function(display){for(var i=0,len=View.pageElements.length;i<len;i++){View.pageElements[i].style.display=display}}};const Templates={partial:{icon:'{{#if icon}}<span class="{{icon}} {{classes}} flb-cart-icon"></span>{{/if}}',label:"{{#if label}}{{label}}{{/if}}"},once:{iconLabel:"{{>icon-block}} {{>label-block}}",box:'<div class="row"><div class="col-md-6 flb-click-history-box"></div><div class="col-md-6 flb-search-history-box"></div></div>'},getIconLabelData:function(options,icon,label){return{icon:icon?options.iconPrefix+icon:null,label:label}},getIconLabelTemplate:function(options,icon,label){const template=HandlebarsUtil.compile(Templates.once.iconLabel);return template(Templates.getIconLabelData(options,icon,label))}};const ElementUtil={create:function(id,context,tag,content,attrs){const el=document.createElement(tag?tag:"div");if(content)ElementUtil.setContent(el,content);if(!attrs)attrs={};if(attrs["class"])attrs["class"]+=" "+id;else attrs["class"]=id;ElementUtil.setAttr(el,attrs);if(context)context.appendChild(el);return el},remove:function(element){element.parentNode.removeChild(element)},find:function(selector,context){if(!context)context=document;return context.querySelectorAll(selector)},findOnce:function(selector,context){return ElementUtil.find(selector,context)[0]},setAttr:function(element,attrs){const attrsArr=Object.entries(attrs);for(var i=0,len=attrsArr.length;i<len;i++)element.setAttribute(attrsArr[i][0],attrsArr[i][1])},getContent:function(element){return element.innerHTML},setContent:function(element,content){element.innerHTML=content},addEvent:function(element,type,handler){element.addEventListener(type,handler)}};const Log={title:"Funnelback History Widget",error:function(a1,a2,a3){this.factory("error",a1,a2,a3)},warn:function(a1,a2,a3){this.factory("warn",a1,a2,a3)},factory:function(type,a1,a2,a3){console.group(Log.title);console[type](a1||"",a2||"",a3||"");console.groupEnd()}};const Utils={extend:function(obj,src){for(var key in src){if(src.hasOwnProperty(key))obj[key]=typeof src[key]==="object"?Utils.extend(obj[key]||{},src[key]):src[key]}return obj}};const HandlebarsUtil={compile:function(template){return Constructor.prototype.Handlebars.compile(template)},registerPartial:function(templates){const templatesArr=Object.entries(templates);for(var i=0,len=templatesArr.length;i<len;i++)Constructor.prototype.Handlebars.registerPartial(templatesArr[i][0]+"-block",templatesArr[i][1])}};HandlebarsUtil.registerPartial(Templates.partial);return Constructor}();