<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- We don't scan everything in our tests for efficiency, rather define a bean for each component 
	context:component-scan base-package="com.funnelback.publicui" / -->
	
	<!-- aop:aspectj-autoproxy / -->

	<bean id="RequestParametersTransformFilter" class="com.funnelback.publicui.search.web.filters.RequestParametersTransformFilter" />
	<bean id="HostnameRestrictionFilter" class="com.funnelback.publicui.search.web.filters.HostnameRestrictionFilter" />	

	<bean id="appCacheManager" class="net.sf.ehcache.CacheManager">
		<constructor-arg index="0" type="java.net.URL" value="classpath:ehcache.xml" />
	</bean>

	<bean id="searchHome" class="java.io.File">
		<constructor-arg index="0" type="java.lang.String"
			value="src/test/resources/dummy-search_home" />
	</bean>
	
	<bean id="freemarkerConfiguration" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
   		<property name="templateLoaderPath" value="file:#{searchHome.absolutePath}" />
	</bean>
	
	
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerView" name="contentOptimiserView">
		<property name="url" value="contentoptimiser/content-optimiser.ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" /> 
	</bean>

	<bean class="com.funnelback.publicui.search.lifecycle.DefaultSearchTransactionProcessor" />
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="useCodeAsDefaultMessage"><value>true</value></property>
	</bean>
	<bean id="i18n" class="com.funnelback.publicui.i18n.I18n" />

	<util:list id="inputFlow">
		<bean class="com.funnelback.publicui.test.mock.MockInputProcessor" />
	</util:list>
	<util:list id="dataFetchers">
		<bean class="com.funnelback.publicui.test.mock.MockDataFetcher" />
	</util:list>

	<util:list id="outputFlow">
		<bean class="com.funnelback.publicui.test.mock.MockOutputProcessor" />
	</util:list>

	<bean id="configRepository" class="com.funnelback.publicui.test.mock.MockConfigRepository" />
	<bean id="localConfigRepository" class="com.funnelback.publicui.search.service.config.DefaultConfigRepository" />
	<util:properties id="appProperties" location="file:src/test/resources/spring/modernui.properties" />
	
	<bean id="autoRefreshLocalIndexRepository" class="com.funnelback.publicui.search.service.index.AutoRefreshLocalIndexRepository" />
		<bean id="mockConfigRepository" class="com.funnelback.publicui.test.mock.MockConfigRepository" />

	<bean id="resourceManager" class="com.funnelback.springmvc.service.resource.AutoRefreshResourceManager" />

	<bean id="localDataRepository" class="com.funnelback.publicui.search.service.data.LocalDataRepository" />

	<bean id="searchController"
		class="com.funnelback.publicui.search.web.controllers.SearchController" />

    <bean id="recommenderController"
   		class="com.funnelback.publicui.recommender.web.controllers.RecommenderController" />

    <bean id="dataAPI"
   		class="com.funnelback.publicui.recommender.dataapi.DataAPIConnectorPADRE" />

    <bean id="recommenderDAO"
   		class="com.funnelback.publicui.recommender.dao.SQLiteRecommenderDAO" />

	<bean id="serveFilecopyDocumentController"
		class="com.funnelback.publicui.search.web.controllers.content.GetFilecopyDocumentController"/>

	<bean id="serveTrimDocumentController"
		class="com.funnelback.publicui.search.web.controllers.content.GetTrimDocumentController"/>

	<bean class="com.funnelback.publicui.test.mock.MockSuggester" />
			
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerView" id="suggestViewSimple">
		<property name="url" value="suggest/simple.ftl" />
		<property name="contentType" value="application/json;charset=UTF-8" />
	</bean>
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerView" id="suggestViewRich">
		<property name="url" value="suggest/rich.ftl" />
		<property name="contentType" value="application/json;charset=UTF-8" />
	</bean>


	<bean id="resourcesController"
		class="com.funnelback.publicui.search.web.controllers.ResourcesController">
		<property name="contextPath" value=""/>
		</bean>

	<bean id="cacheController"
		class="com.funnelback.publicui.search.web.controllers.CacheController" />

	<bean
		class="com.funnelback.publicui.search.web.interceptors.AccessRestrictionInterceptor" />
	<bean
		class="com.funnelback.publicui.search.web.interceptors.DenyIfDlsIsOnInterceptor" />

	<bean
		class="com.funnelback.publicui.search.lifecycle.output.processors.FixPseudoLiveLinks" />

	<bean
		class="com.funnelback.publicui.search.lifecycle.output.processors.FixDisplayUrls" />
		
	<util:map id="profilingStats" key-type="java.lang.String"
		value-type="java.util.LinkedList" />

	<bean class="com.funnelback.publicui.xml.StaxStreamFacetedNavigationConfigParser" />
	
	<bean class="com.funnelback.publicui.search.web.exception.DefaultTemplateExceptionHandler" />
	
	<bean class="org.springframework.web.servlet.i18n.FixedLocaleResolver" />
	
	<bean class="com.funnelback.publicui.search.service.auth.DefaultAuthTokenManager" />

    <bean class="com.funnelback.publicui.search.service.index.result.DefaultResultFetcher" />
	
    <bean class="com.codahale.metrics.MetricRegistry" />
	
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerView" name="trimReferenceView">
		<property name="url" value="trim-reference.ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>
	
    <bean id="dataSource" class="org.h2.jdbcx.JdbcDataSource">
        <property name="URL" value="jdbc:h2:file:target/test-output/session-db" />
    </bean>
    
    <bean class="com.funnelback.publicui.search.service.session.ResultsCartDao" />
    <bean class="com.funnelback.publicui.search.service.session.SearchHistoryDao" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven />
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="search-session" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <!--  property name="generateDdl" value="true" /-->
                <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
            </bean>
        </property>
    </bean>
    
    <bean class="com.funnelback.publicui.search.web.controllers.session.SearchHistoryController" />
    <bean class="com.funnelback.publicui.search.web.controllers.session.ResultsCartController" />
    <bean class="com.funnelback.publicui.search.web.controllers.session.ResultsCartProcessController" />
    <bean class="com.funnelback.publicui.test.mock.MockLogService" />
    <bean class="com.funnelback.springmvc.utils.web.LocalHostnameHolder" />
    
    <bean class="com.funnelback.publicui.search.service.index.DefaultQueryReadLock" />

    <bean name="recommenderJsonView"
   		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
           <property name="renderedAttributes" value="RecommendationResponse" />
   	</bean>
	
</beans>